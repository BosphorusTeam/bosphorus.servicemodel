//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.bosphorus.com/DemoModule")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentifiableOfdateTime", Namespace="http://schemas.bosphorus.com/DemoModule")]
    [System.SerializableAttribute()]
    public partial class IdentifiableOfdateTime : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service.bosphorus.com/Hosting", ConfigurationName="DemoServiceReference.DemoServiceContract")]
    public interface DemoServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/GetDateTime", ReplyAction="http://service.bosphorus.com/DemoService/GetDateTimeResponse")]
        string GetDateTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/GetDateTime", ReplyAction="http://service.bosphorus.com/DemoService/GetDateTimeResponse")]
        System.Threading.Tasks.Task<string> GetDateTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/HelloWorld", ReplyAction="http://service.bosphorus.com/DemoService/HelloWorldResponse")]
        string HelloWorld(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/HelloWorld", ReplyAction="http://service.bosphorus.com/DemoService/HelloWorldResponse")]
        System.Threading.Tasks.Task<string> HelloWorldAsync(string firstName, string lastName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/Complex", ReplyAction="http://service.bosphorus.com/DemoService/ComplexResponse")]
        string Complex(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer customer, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/Complex", ReplyAction="http://service.bosphorus.com/DemoService/ComplexResponse")]
        System.Threading.Tasks.Task<string> ComplexAsync(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer customer, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/MultipleInput", ReplyAction="http://service.bosphorus.com/DemoService/MultipleInputResponse")]
        string MultipleInput(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer[] customers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/MultipleInput", ReplyAction="http://service.bosphorus.com/DemoService/MultipleInputResponse")]
        System.Threading.Tasks.Task<string> MultipleInputAsync(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer[] customers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/GenericInput", ReplyAction="http://service.bosphorus.com/DemoService/GenericInputResponse")]
        string GenericInput(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.IdentifiableOfdateTime identifiable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/GenericInput", ReplyAction="http://service.bosphorus.com/DemoService/GenericInputResponse")]
        System.Threading.Tasks.Task<string> GenericInputAsync(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.IdentifiableOfdateTime identifiable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/MultipleOutput", ReplyAction="http://service.bosphorus.com/DemoService/MultipleOutputResponse")]
        Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer[] MultipleOutput();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/MultipleOutput", ReplyAction="http://service.bosphorus.com/DemoService/MultipleOutputResponse")]
        System.Threading.Tasks.Task<Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer[]> MultipleOutputAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/Throw", ReplyAction="http://service.bosphorus.com/DemoService/ThrowResponse")]
        void Throw(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://service.bosphorus.com/DemoService/Throw", ReplyAction="http://service.bosphorus.com/DemoService/ThrowResponse")]
        System.Threading.Tasks.Task ThrowAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DemoServiceContractChannel : Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.DemoServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DemoServiceContractClient : System.ServiceModel.ClientBase<Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.DemoServiceContract>, Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.DemoServiceContract {
        
        public DemoServiceContractClient() {
        }
        
        public DemoServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DemoServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DemoServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DemoServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetDateTime() {
            return base.Channel.GetDateTime();
        }
        
        public System.Threading.Tasks.Task<string> GetDateTimeAsync() {
            return base.Channel.GetDateTimeAsync();
        }
        
        public string HelloWorld(string firstName, string lastName) {
            return base.Channel.HelloWorld(firstName, lastName);
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync(string firstName, string lastName) {
            return base.Channel.HelloWorldAsync(firstName, lastName);
        }
        
        public string Complex(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer customer, string name) {
            return base.Channel.Complex(customer, name);
        }
        
        public System.Threading.Tasks.Task<string> ComplexAsync(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer customer, string name) {
            return base.Channel.ComplexAsync(customer, name);
        }
        
        public string MultipleInput(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer[] customers) {
            return base.Channel.MultipleInput(customers);
        }
        
        public System.Threading.Tasks.Task<string> MultipleInputAsync(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer[] customers) {
            return base.Channel.MultipleInputAsync(customers);
        }
        
        public string GenericInput(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.IdentifiableOfdateTime identifiable) {
            return base.Channel.GenericInput(identifiable);
        }
        
        public System.Threading.Tasks.Task<string> GenericInputAsync(Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.IdentifiableOfdateTime identifiable) {
            return base.Channel.GenericInputAsync(identifiable);
        }
        
        public Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer[] MultipleOutput() {
            return base.Channel.MultipleOutput();
        }
        
        public System.Threading.Tasks.Task<Bosphorus.ServiceModel.Hosting.Demo.Client.DemoServiceReference.Customer[]> MultipleOutputAsync() {
            return base.Channel.MultipleOutputAsync();
        }
        
        public void Throw(string name) {
            base.Channel.Throw(name);
        }
        
        public System.Threading.Tasks.Task ThrowAsync(string name) {
            return base.Channel.ThrowAsync(name);
        }
    }
}
